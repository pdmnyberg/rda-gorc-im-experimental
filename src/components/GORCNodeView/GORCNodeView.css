.gorc-node-root {
  position: relative;
  --gorc-node-size: 30px;
  --gorc-shape-size: calc(var(--gorc-node-size) * 1);
  --gorc-shape-color: #999;
  --gorc-icon-displacement: 0rem;
  --gorc-select-displacement: 0rem;
  --gorc-node-animation-time: 0.1s;
  font-size: calc(var(--gorc-node-size) / 2);
}

.gorc-node-root:hover {
  --gorc-icon-displacement: -0.3rem;
  --gorc-select-displacement: 0.3rem;
}

.gorc-node-root > .react-flow__handle.target {
  width: 30px;
  height: 30px;
}

.gorc-node-root.selected {
  outline: 3px solid #007bff;
  border-radius: 4px;
}

.gorc-node-body {
  position: relative;
  width: calc(var(--gorc-node-size) * 6.7);
  padding-top: calc(0.5 * var(--gorc-shape-size));
}

.gorc-node-shape {
  width: var(--gorc-shape-size);
  height: var(--gorc-shape-size);
  position: absolute;
  top: calc(-0.5 * var(--gorc-shape-size));
  left: calc(50% - 0.5 * var(--gorc-shape-size));
  mask-image: var(--gorc-shape);
  mask-mode: alpha;
  mask-size: contain;
  mask-position: center center;
  mask-repeat: no-repeat;
  background-color: white;
}
.gorc-node-shape::before, .gorc-node-shape::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: top var(--gorc-node-animation-time), left var(--gorc-node-animation-time), width var(--gorc-node-animation-time), height var(--gorc-node-animation-time);
}
.gorc-node-shape::after {
  mask-image: var(--gorc-shape), var(--gorc-shape);
  mask-composite: intersect;
  mask-mode: alpha, luminance;
  mask-size: contain;
  mask-position: center center;
  mask-repeat: no-repeat;
  background-color: var(--gorc-shape-color);
}
.gorc-node-shape::before {
  mask-image: var(--gorc-shape), var(--gorc-shape);
  mask-composite: intersect;
  mask-mode: alpha, luminance;
  mask-size: contain;
  mask-position: center center;
  mask-repeat: no-repeat;
  background-color: var(--gorc-shape-color);
  top: var(--gorc-select-displacement);
  left: var(--gorc-select-displacement);
  width: calc(100% - 2 * var(--gorc-select-displacement));
  height: calc(100% - 2 * var(--gorc-select-displacement));
  opacity: 25%;
}

.gorc-node-root[data-type="essential-element"] {
  --gorc-shape-size: calc(var(--gorc-node-size) * 4);
  --gorc-shape: url("../../img/gorc-icon_essential-element-core.svg");
  font-weight: bold;
}
.gorc-node-root[data-consideration-level="core"] {
  --gorc-shape-color: rgb(0, 50, 124);
}
.gorc-node-root[data-consideration-level="desirable"] {
  --gorc-shape-color: rgb(152, 97, 41);
}
.gorc-node-root[data-consideration-level="optional"] {
  --gorc-shape-color: rgb(36, 155, 108);
}

.gorc-node-root[data-type="category"] {
  --gorc-shape-size: calc(var(--gorc-node-size) * 1);
  --gorc-shape: url("../../img/gorc-icon_category-core.svg");
}

.gorc-node-root[data-type="subcategory"] {
  --gorc-shape-size: calc(var(--gorc-node-size) * 1);
  --gorc-shape: url("../../img/gorc-icon_subcategory-core.svg");
}

.gorc-node-root[data-type="attribute"] {
  --gorc-shape-size: calc(var(--gorc-node-size) * 1);
  --gorc-shape: url("../../img/gorc-icon_attribute-core.svg");
}

.gorc-node-root[data-type="feature"] {
  --gorc-shape-size: calc(var(--gorc-node-size) * 1);
  --gorc-shape: url("../../img/gorc-icon_feature-core.svg");
}

.gorc-node-handle {
  visibility: hidden;
}

.gorc-node-icon {
  position: relative;
  width: 100%;
  height: 100%;
}

.gorc-node-icon::after, .gorc-node-icon::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: top var(--gorc-node-animation-time);
}

.gorc-node-icon::before {
  mask-image: var(--gorc-icon);
  mask-mode: alpha;
  mask-size: contain;
  mask-position: center center;
  mask-repeat: no-repeat;
  background-color: rgba(0, 0, 0, 0.25);
}

.gorc-node-icon::after {
  top: var(--gorc-icon-displacement);
  background-image: var(--gorc-icon);
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}

.gorc-node-text {
  text-align: center;
  padding: calc(var(--gorc-node-size) / 2);
  background-color: rgba(255, 255, 255, 0.8);
}
